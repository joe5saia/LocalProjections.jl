var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = LocalProjections","category":"page"},{"location":"#LocalProjections","page":"Home","title":"LocalProjections","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [LocalProjections]","category":"page"},{"location":"#LocalProjections.LocalProjection","page":"Home","title":"LocalProjections.LocalProjection","text":"Struct with the following fields\n\ndf             \nhorizons       \nmodels         \ntransformfunc  \ngrwthoffset    \nformula        \nregstyle       \nynames         \n\n\n\n\n\n","category":"type"},{"location":"#LocalProjections.F!","page":"Home","title":"LocalProjections.F!","text":"F!(df, v, horizons=1, fun=identity)\n\nForward operator. Applies function fun to the column v of df and then makes the  leads specified by horizons and adds them to df as the column F(i)(v). Modifies df.  Return the list of new columns created. \n\n\n\n\n\n","category":"function"},{"location":"#LocalProjections.FΔ!","page":"Home","title":"LocalProjections.FΔ!","text":"F!(df, v, horizons=1, fun=identity, baseperiod=0, relativebase=false)\n\nCumlative forward difference operator Applies function fun to the column v of df and then calculates  the growth of this column, saving the results to a new columns in df as the column FΔ(i)(v). If x = map(fun, df[!, v]), df.FΔ(i)(v) = lead(x, horizons) - lead(x, baseperiod) or x = map(fun, df[!, v]), df.FΔ(i)(v) = lead(x, horizons) - lead(x, horizon + baseperiod) if relativebase == true Modifies df.  Return the list of new columns created. \n\n\n\n\n\n","category":"function"},{"location":"#LocalProjections.L!","page":"Home","title":"LocalProjections.L!","text":"L!(df, v, horizons=1, fun=identity)\n\nLag operator. Applies function fun to the column v of df and then makes the  laggs specified by horizons and adds them to df as the column L(i)(v). Modifies df.  Return the list of new columns created. \n\n\n\n\n\n","category":"function"},{"location":"#LocalProjections.LΔ!","page":"Home","title":"LocalProjections.LΔ!","text":"LΔ!(df, v, horizons=1, fun=identity, baseperiod=0, relativebase=false)\n\nCumlative lag difference operator\n\nApplies function fun to the column v of df and then calculates  the lagged growth of this column, saving the results to a new columns in df as the column LΔ(i)(v). If x = map(fun, df[!, v]), df.FΔ(i)(v) = lag(x, baseperiod) - lag(x, horizons) or x = map(fun, df[!, v]), df.FΔ(i)(v) = lag(x, i+baseperiod) - lag(x, horizons) if relativebase == true Modifies df.  Return the list of new columns created. \n\n\n\n\n\n","category":"function"},{"location":"#LocalProjections.coef-Tuple{LocalProjection,Symbol}","page":"Home","title":"LocalProjections.coef","text":"coef(lp::LocalProjection, xname::Symbol)\n\nReturns a vector of coefficients for the variable xname for each regression. coef(lp, xname)[i]  corresponds to the coefficient for the horizon lp.horizons[i].\n\n\n\n\n\n","category":"method"},{"location":"#LocalProjections.coef_se-Tuple{LocalProjection,Symbol}","page":"Home","title":"LocalProjections.coef_se","text":"coef_se(lp::LocalProjection, xname::Symbol)\n\nReturns a dataframe with the columns [horizons, β, se] aligning the  estimated coefficient, standard error and horizon that these correspond to.  Constructed from DataFrame(horizons = lp.horizons, β = coef(lp, xname), se = se(lp, xname))\n\n\n\n\n\n","category":"method"},{"location":"#LocalProjections.makedepvars-Tuple{LocalProjection}","page":"Home","title":"LocalProjections.makedepvars","text":"makedepvars(lp::LocalProjection)\n\nTakes the lhs variable from lp.formula and makes the cumlative growth  variables  for each horizon specified by horizons for the y-variable. This updates the  dataframe stored in lp. Also updates the ynames array with the name of the  created variables\n\n\n\n\n\n","category":"method"},{"location":"#LocalProjections.runregs-Tuple{LocalProjection}","page":"Home","title":"LocalProjections.runregs","text":"runregs(lp::LocalProjection)\n\nEstimates the regression for each horizon using FixedEffectModels.reg(lp.df, Term(lp.ynames[index]) ~ lp.formula.rhs) and store the estimated models in lp.models. The estimations are done lazely, i.e. each regression starts  from scratch without saving intermediate computations common across each regression\n\n\n\n\n\n","category":"method"},{"location":"#LocalProjections.se-Tuple{LocalProjection,Symbol}","page":"Home","title":"LocalProjections.se","text":"se(lp::LocalProjection, xname::Symbol)\n\nReturns a vector of standard errors for each coefficient for the variable xname for each regression.  se(lp, xname)[i] corresponds to the se for the horizon lp.horizons[i].\n\n\n\n\n\n","category":"method"},{"location":"#LocalProjections.Δ","page":"Home","title":"LocalProjections.Δ","text":"Δ(x, horizons=1, fun=identity)\n\nSingle period growth function     map(fun, x) .-  lag(map(fun, x), horizons)\n\n\n\n\n\n","category":"function"}]
}
